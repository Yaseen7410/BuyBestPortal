/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { BsDatepickerConfig } from './bs-datepicker.config';
import * as ɵngcc0 from '@angular/core';
var BsDaterangepickerInlineConfig = /** @class */ (function (_super) {
    tslib_1.__extends(BsDaterangepickerInlineConfig, _super);
    function BsDaterangepickerInlineConfig() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // DatepickerRenderOptions
        _this.displayMonths = 2;
        /**
         * turn on/off animation
         */
        _this.isAnimated = false;
        return _this;
    }
BsDaterangepickerInlineConfig.ɵfac = /*@__PURE__*/ function () { var ɵBsDaterangepickerInlineConfig_BaseFactory; return function BsDaterangepickerInlineConfig_Factory(t) { return (ɵBsDaterangepickerInlineConfig_BaseFactory || (ɵBsDaterangepickerInlineConfig_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(BsDaterangepickerInlineConfig)))(t || BsDaterangepickerInlineConfig); }; }();
BsDaterangepickerInlineConfig.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: BsDaterangepickerInlineConfig, factory: function (t) { return BsDaterangepickerInlineConfig.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BsDaterangepickerInlineConfig, [{
        type: Injectable
    }], null, null); })();
    return BsDaterangepickerInlineConfig;
}(BsDatepickerConfig));
export { BsDaterangepickerInlineConfig };
if (false) {
    /** @type {?} */
    BsDaterangepickerInlineConfig.prototype.displayMonths;
    /**
     * turn on/off animation
     * @type {?}
     */
    BsDaterangepickerInlineConfig.prototype.isAnimated;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnMtZGF0ZXJhbmdlcGlja2VyLWlubGluZS5jb25maWcuanMiLCJzb3VyY2VzIjpbIm5neC1ib290c3RyYXAvZGF0ZXBpY2tlci9icy1kYXRlcmFuZ2VwaWNrZXItaW5saW5lLmNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7O0FBRTVEO0FBQ3lELElBQU4seURBQWtCO0FBQUMsSUFEdEU7QUFDNkIsUUFEN0IscUVBTUM7QUFDRDtBQUFtQyxRQUovQixtQkFBYSxHQUFHLENBQUMsQ0FBQztBQUN0QjtBQUFZO0FBQ0E7QUFDWixRQURJLGdCQUFVLEdBQUcsS0FBSyxDQUFDO0FBQ3ZCO0FBQ29CLElBRHBCLENBQUM7aUVBTkEsVUFBVTs7OzswQkFDTDtBQUFDLElBS1Asb0NBQUM7QUFDQSxDQURBLEFBTkQsQ0FDbUQsa0JBQWtCLEdBS3BFO0FBQ0QsU0FOYSw2QkFBNkI7QUFBSTtBQUFhO0FBQ25ELElBQ0osc0RBQWtCO0FBQ3RCO0FBQVE7QUFDSjtBQUFpQjtBQUVsQixJQUZDLG1EQUFtQjtBQUN2QjtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQnNEYXRlcGlja2VyQ29uZmlnIH0gZnJvbSAnLi9icy1kYXRlcGlja2VyLmNvbmZpZyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBCc0RhdGVyYW5nZXBpY2tlcklubGluZUNvbmZpZyBleHRlbmRzIEJzRGF0ZXBpY2tlckNvbmZpZyB7XG4gICAgLy8gRGF0ZXBpY2tlclJlbmRlck9wdGlvbnNcbiAgICBkaXNwbGF5TW9udGhzID0gMjtcbiAgICAvKiogdHVybiBvbi9vZmYgYW5pbWF0aW9uICovXG4gICAgaXNBbmltYXRlZCA9IGZhbHNlO1xufVxuIl19
{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/progress-spinner\";\nimport * as i7 from \"@angular/material/button\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, route, router) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.loading = false;\n      this.submitted = false;\n      this.returnUrl = '';\n    }\n\n    ngOnInit() {\n      this.loginForm = this.formBuilder.group({\n        name: ['', [Validators.required, Validators.email]],\n        password: ['', Validators.required]\n      });\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    get f() {\n      return this.loginForm.controls;\n    }\n\n    onSubmit() {\n      this.submitted = true;\n      debugger;\n\n      if (this.loginForm.invalid) {\n        return;\n      }\n\n      this.loading = true; // this.authenticationService\n      //   .login(this.f.email.value, this.f.password.value)\n      //   .pipe(first())\n      //   .subscribe(\n      //     (data: any) => {\n      //       debugger;\n      //       if (data.succeeded) {\n      //         this.loading = false;\n      //         location.reload();\n      //         this.success();\n      // this.successMessage = data.lists;\n      // console.log(this.successMessage);\n\n      this.router.navigateByUrl('/home'); // } else {\n      //   console.log(data.errors);\n      //   this.errorMessage = data.errors;\n      //   this.loading = false;\n      //   this.router.navigateByUrl('/login');\n      // }\n      //  this.errorMessage = localStorage.getItem('currentUser');\n      //  splitString(this.errorMessage);\n      // alert(this.errorMessage);\n      //   },\n      //   (error: any) => {\n      //     this.router.navigateByUrl('/login');\n      //     this.loading = false;\n      //   }\n      // );\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 19,\n    vars: 4,\n    consts: [[1, \"example-card\"], [1, \"example-form\"], [\"cellspacing\", \"0\", 1, \"example-full-width\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"placeholder\", \"Username\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Password\", \"type\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0);\n        i0.ɵɵelementStart(1, \"mat-card-header\");\n        i0.ɵɵelementStart(2, \"mat-card-title\");\n        i0.ɵɵtext(3, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-card-content\");\n        i0.ɵɵelementStart(5, \"form\", 1);\n        i0.ɵɵelementStart(6, \"table\", 2);\n        i0.ɵɵelementStart(7, \"tr\");\n        i0.ɵɵelementStart(8, \"td\");\n        i0.ɵɵelementStart(9, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(10, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"tr\");\n        i0.ɵɵelementStart(12, \"td\");\n        i0.ɵɵelementStart(13, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(14, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"mat-spinner\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-card-actions\");\n        i0.ɵɵelementStart(17, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_17_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(18, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"display\", ctx.showSpinner ? \"block\" : \"none\");\n      }\n    },\n    directives: [i3.MatCard, i3.MatCardHeader, i3.MatCardTitle, i3.MatCardContent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm, i4.MatFormField, i5.MatInput, i1.DefaultValueAccessor, i1.RequiredValidator, i1.NgControlStatus, i1.NgModel, i6.MatSpinner, i3.MatCardActions, i7.MatButton],\n    styles: [\"\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
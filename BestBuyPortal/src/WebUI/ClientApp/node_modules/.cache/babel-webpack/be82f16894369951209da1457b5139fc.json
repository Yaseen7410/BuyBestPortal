{"ast":null,"code":"import { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { AuthServiceService } from 'src/BestBuyPortal-Api/Services/auth-service.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/BestBuyPortal-Api/Services/auth-service.service\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/common\";\n\nfunction LoginComponent_input_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 7);\n  }\n}\n\nfunction LoginComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, route, router, authenticationService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.authenticationService = authenticationService;\n      this.loading = false;\n      this.submitted = false;\n      this.error = '';\n      this.showPasswordField = false; // redirect to home if already logged in\n\n      if (this.authenticationService.currentUserValue) {\n        this.router.navigate(['/']);\n      }\n    }\n\n    ngOnInit() {\n      this.loginForm = this.formBuilder.group({\n        name: ['', Validators.required],\n        password: ['', Validators.required]\n      }); // get return url from route parameters or default to '/'\n\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    get f() {\n      return this.loginForm.controls;\n    }\n\n    submit() {\n      debugger;\n      this.submitted = true; // stop here if form is invalid\n\n      if (this.loginForm.invalid) {\n        return;\n      }\n\n      this.loading = true;\n      this.authenticationService.login(this.f.name.value, this.f.password.value).pipe(first()).subscribe(data => {\n        debugger;\n\n        if (data.succeeded) {\n          this.loading = false;\n          location.reload(); //this.success();\n          // this.successMessage = data.lists;\n          // console.log(this.successMessage);\n\n          this.router.navigateByUrl('/home');\n        } else {\n          console.log(data.errors); // this.errorMessage = data.errors;\n\n          this.loading = false;\n          this.router.navigateByUrl('/login');\n        } //  this.errorMessage = localStorage.getItem('currentUser');\n        //  splitString(this.errorMessage);\n        // alert(this.errorMessage);\n\n      }, error => {\n        this.router.navigateByUrl('/login');\n        this.loading = false;\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthServiceService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 17,\n    vars: 4,\n    consts: [[1, \"text-center\", \"col-md-4\"], [3, \"formGroup\", \"ngclick\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Name\", \"formControlName\", \"name\"], [\"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"Password\", \"formControlName\", \"password\", 4, \"ngIf\"], [1, \"btn\", \"btn-primary\", \"m-1\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [\"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"Password\", \"formControlName\", \"password\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0);\n        i0.ɵɵelementStart(1, \"mat-card-title\");\n        i0.ɵɵtext(2, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-card-content\");\n        i0.ɵɵelementStart(4, \"form\", 1);\n        i0.ɵɵlistener(\"ngclick\", function LoginComponent_Template_form_ngclick_4_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(5, \"p\");\n        i0.ɵɵelementStart(6, \"mat-form-field\");\n        i0.ɵɵelement(7, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵelementStart(10, \"mat-form-field\");\n        i0.ɵɵtemplate(11, LoginComponent_input_11_Template, 1, 0, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 4);\n        i0.ɵɵtext(13, \" Continue\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 5);\n        i0.ɵɵtemplate(15, LoginComponent_span_15_Template, 1, 0, \"span\", 6);\n        i0.ɵɵtext(16, \" Login\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.showPasswordField);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    directives: [i4.MatCard, i4.MatCardTitle, i4.MatCardContent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i5.MatFormField, i6.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i7.NgIf],\n    encapsulation: 2\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}